use instructions::Instruction;
use instructions::Instruction::*;

#[pub]
instructions -> Vec<Instruction>
    = instruction ** [\n]

#[pub]
instruction -> Instruction
    = nop / addi

nop -> Instruction
    = "nop" { Nop }

addi -> Instruction
    = "addi " r:register "," d:register "," i:immediate { Addi(r, d, i) }

register -> u32
    = "x" [0-9]+ { match_str[1..].parse().unwrap() }

immediate -> i32
    = negative_immediate / positive_immediate

negative_immediate -> i32
    = "-" [0-9]+ { -match_str[1..].parse::<i32>().unwrap() }

positive_immediate -> i32
    = [0-9]+ { match_str.parse().unwrap() }