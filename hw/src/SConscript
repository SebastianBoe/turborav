import os

CHISEL_JAR     = "/usr/share/scala/chisel/chisel.jar"
COMMONS_IO_JAR = "/usr/share/java/commons-io/commons-io.jar"
CLASSPATH = "{0}:{1}".format(CHISEL_JAR, COMMONS_IO_JAR)

turborav_jar = Command(
    ['scala/classes/TurboRav.jar'],
    Glob('main/scala/*.scala') +
    Glob('test/scala/*.scala') +
    Glob('test/hybrid/scala/*.scala') +
    Glob('test/scala/tb/*.scala'),
    """fsc\
    -feature\
    -deprecation\
    -language:reflectiveCalls\
    -Xlint\
    -Xlint:-nullary-unit\
    -Xfatal-warnings\
    -classpath {0}\
    -d build/scala/classes\
    build/main/scala/*.scala\
    build/test/scala/*.scala\
    build/test/scala/tb/*.scala\
    build/test/hybrid/scala/*.scala\
    \
    &&\
    \
    jar cf \
    build/scala/classes/TurboRav.jar \
    -C build/scala/classes TurboRav""".format(CLASSPATH)
)[0]

COMMON_FLAGS = (
                " -O3 "
                " -Os "
)

CCFLAGS = COMMON_FLAGS + \
          (" -static"
           " -c"
           " -m32"
           " -Wa,-march=RVIMAFDXhwacha "
           " --std=gnu11 "
)

LINKER_FLAGS = (" -T$LINKER_SCRIPT "
                " -m elf32lriscv "
                " -Map=${TARGET}.map "
)

CC = 'riscv64-unknown-elf-gcc'
LD = 'riscv64-unknown-elf-ld'

linker_script = SConscript("linker_script/SConscript")

riscv_program_env = Environment(
    ENV = os.environ,
    CC = CC,
    AS = CC,
    LINK = LD,
    LIBS = File("/opt/riscv/riscv64-unknown-elf/lib/soft-float/32/no-atomic/libc.a"),
    CCFLAGS = CCFLAGS,
    ASFLAGS = CCFLAGS,
    LINKFLAGS = COMMON_FLAGS + LINKER_FLAGS,
    LINKER_SCRIPT = linker_script,
    BUILDERS = {
        'Disassemble' : Builder(
            action = """riscv64-unknown-elf-objdump \
            -DS -M no-aliases -M numeric $SOURCE > $TARGET"""
        )
    }
)

SConscript(
    "crt0/SConscript",
    exports = "riscv_program_env"
)

default_program = SConscript(
    'programs/SConscript',
    exports = "riscv_program_env"
)

turborav_program_env = SConscript(
    "system_software/SConscript",
    exports = "riscv_program_env"
)

SConscript(
    "test/SConscript",
    exports = "turborav_jar riscv_program_env default_program CLASSPATH turborav_program_env"
)

SConscript(
    "synth/SConscript",
    exports = 'turborav_jar CLASSPATH default_program'
)
