import os

SetOption('num_jobs', 8)

riscv_tests  = SConscript('riscv_tests/SConscript'   , variant_dir='build' , duplicate=0)

CHISEL_JAR     = "/usr/share/java/chisel/chisel.jar"
COMMONS_IO_JAR = "/usr/share/java/commons-io/commons-io.jar"
Export('CHISEL_JAR COMMONS_IO_JAR')

turborav_jar = SConscript('src/main/scala/SConscript')

vars = Variables()
vars.Add(
    EnumVariable(
        'toplevel',
        'Select what the top-level HW module should be. e.g. Soc',
        'Soc',
        allowed_values=Glob("src/main/scala/*.scala", strings=True)
    )
)

env = Environment(ENV = os.environ)

for test in riscv_tests:
    elf_path = test[0]
    target_dir = "{0}_/".format(elf_path)
    a = env.Command(
        target_dir + "Soc.v",
        turborav_jar,
        'scala -classpath build/scala/classes:{0}:{1} TurboRav.TurboRav Soc {2} {3} 12 8'
        .format(
            CHISEL_JAR,
            COMMONS_IO_JAR,
            target_dir,
            elf_path
        )
    )
#    Depends(a, [turborav_jar, test])
