import os
import multiprocessing

Help("""Type:
'scons build/test'                      to run all tests,
'scons build/test/riscv/'               to run all riscv tests,
'scons build/test/riscv/add'            to run the riscv add test,
'scons build/test/unit/'                to run all unit tests,
'scons build/test/unit/Alu'             to run the Alu test from src/test/scala,
'scons build/test/lint'                 to lint the scala code,
'scons build/synthesis/Soc.v'           to generate verilog code,
'scons build/synthesis/turborav.bit'    to generate a netlist,
'scons build/synthesis/programming.log' to program a netlist,
'scons build'                           to build everything.

All build targets are files, or directories of files that can
be "built" by the build system. Even programming a netlist is
considered just a build target that generates a programming.log
text file.
""")

# Multi-threaded builds
SetOption("num_jobs", multiprocessing.cpu_count() + 1)

# Use host environment by default.
DefaultEnvironment(ENV = os.environ)

# This ensures the entire build directory is cleaned, even files in
# there that SCons didn't know that it generated.
Clean("build", "build")

SConscript("src/SConscript", variant_dir = "build")
